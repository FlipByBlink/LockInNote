import WidgetKit
import SwiftUI

struct ðŸ„¿rovider: TimelineProvider {
    func placeholder(in context: Context) -> ðŸ…‚impleEntry {
        ðŸ…‚impleEntry(date: .now)
    }

    func getSnapshot(in context: Context, completion: @escaping (ðŸ…‚impleEntry) -> ()) {
        completion(ðŸ…‚impleEntry(date: .now))
    }

    func getTimeline(in context: Context, completion: @escaping (Timeline<Entry>) -> ()) {
        completion(Timeline(entries: [ðŸ…‚impleEntry(date: .now)], policy: .never))
    }
}

struct ðŸ…‚impleEntry: TimelineEntry {
    let date: Date
}

struct ðŸ„´ntryView : View {
    var entry: ðŸ„¿rovider.Entry
    private let ðŸŽ› = ðŸŽ›WidgetsModel().rectangular
    var body: some View {
        Group {
            if ðŸŽ›.text != "" {
                Text(ðŸŽ›.text)
                    .italic(ðŸŽ›.italic)
                    .multilineTextAlignment(ðŸŽ›.multilineTextAlignment.value)
            } else if ðŸŽ›.placeholder != .nothing {
                Image(systemName: ðŸŽ›.placeholder.icon)
                    .imageScale(.large)
            }
        }
        .font(.system(size: CGFloat(ðŸŽ›.fontSize),
                      weight: ðŸŽ›.fontWeight.value,
                      design: ðŸŽ›.fontDesign.value))
        .foregroundStyle(ðŸŽ›.level.value)
        .widgetURL(URL(string: "Rectangular")!)
    }
}

@main
struct LINComplication: Widget {
    let kind: String = "LINComplication"

    var body: some WidgetConfiguration {
        StaticConfiguration(kind: kind, provider: ðŸ„¿rovider()) { â“”ntry in
            ðŸ„´ntryView(entry: â“”ntry)
        }
        .configurationDisplayName("My Widget")
        .description("This is an example widget.")
        .supportedFamilies([.accessoryInline,
                            .accessoryRectangular,
                            .accessoryCircular,
                            .accessoryCorner])
    }
}
